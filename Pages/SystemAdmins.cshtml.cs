using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using Microsoft.Extensions.Logging;
using MyWebApp.Data;
using MyWebApp.Models;

namespace MyWebApp.Pages
{
    public class SystemAdminsModel : PageModel
    {
        private readonly AppDbContext _context;
        private readonly ILogger<SystemAdminsModel> _logger;

        public SystemAdminsModel(AppDbContext context, ILogger<SystemAdminsModel> logger)
        {
            _context = context;
            _logger = logger;
        }

        public List<ApplicationAdmin> ApplicationAdmins { get; set; } = new();

        [BindProperty]
        public ApplicationAdmin NewApplicationAdmin { get; set; } = new();

        [BindProperty]
        public ApplicationAdmin? EditApplicationAdmin { get; set; }

        [BindProperty]
        public Guid DeleteId { get; set; }

        public void OnGet()
{
    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Session ‡∏Å‡πà‡∏≠‡∏ô (‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å TempData ‡πÄ‡∏õ‡πá‡∏ô Session)
    var employeeNo = HttpContext.Session.GetString("EmployeeNo");
    if (string.IsNullOrEmpty(employeeNo))
    {
        Response.Redirect("/Login");
        return;
    }

    // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
    NewApplicationAdmin = new ApplicationAdmin
    {
        ApplicationAdminId = Guid.Empty,
        ApplicationId = Guid.Empty,
        EmployeeNo = string.Empty,
        FullName = string.Empty
    };

    ApplicationAdmins = _context.ApplicationAdmins.ToList();

    var allApplications = _context.Applications
        .OrderBy(a => a.ApplicationStatus == "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        .ThenBy(a => a.ApplicationName)
        .ToList();

    ViewData["ApplicationList"] = allApplications;

    ViewData["ActiveApplicationList"] = allApplications
        .Where(a => a.ApplicationStatus == "‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        .ToList();

    ViewData["TotalAdmins"] = ApplicationAdmins.Count;
    ViewData["TotalApps"] = allApplications.Count(a => a.ApplicationStatus == "‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô");
}


        public async Task<IActionResult> OnPostCreateAsync()
        {
            var employeeNo = TempData["EmployeeNo"]?.ToString();
            TempData.Keep("EmployeeNo");

            // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
            ApplicationAdmins = _context.ApplicationAdmins.ToList();
            
            var allApplications = _context.Applications
                .OrderBy(a => a.ApplicationStatus == "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
                .ThenBy(a => a.ApplicationName)
                .ToList();
                
            ViewData["ApplicationList"] = allApplications;
            ViewData["ActiveApplicationList"] = allApplications
                .Where(a => a.ApplicationStatus == "‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
                .ToList();

            // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå ModelState ‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ TryUpdateModelAsync
            ModelState.Clear();
            await TryUpdateModelAsync(
                NewApplicationAdmin,
                "NewApplicationAdmin",
                m => m.ApplicationId,
                m => m.EmployeeNo,
                m => m.FullName
            );

            // Debug log
            _logger.LogInformation("==== [DEBUG] POST: Create ApplicationAdmin ====");
            _logger.LogInformation("ApplicationId: {ApplicationId}", NewApplicationAdmin.ApplicationId);
            _logger.LogInformation("EmployeeNo: {EmployeeNo}", NewApplicationAdmin.EmployeeNo ?? "null");
            _logger.LogInformation("FullName: {FullName}", NewApplicationAdmin.FullName ?? "null");
            _logger.LogInformation("ModelState.IsValid: {IsValid}", ModelState.IsValid);

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
            if (NewApplicationAdmin.ApplicationId == Guid.Empty)
            {
                ModelState.AddModelError("NewApplicationAdmin.ApplicationId", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô");
            }

            if (string.IsNullOrWhiteSpace(NewApplicationAdmin.EmployeeNo))
            {
                ModelState.AddModelError("NewApplicationAdmin.EmployeeNo", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô");
            }
            else
            {
                // üî• ‡πÄ‡∏û‡∏¥‡πà‡∏°: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
                NewApplicationAdmin.EmployeeNo = NewApplicationAdmin.EmployeeNo.Trim();
                if (NewApplicationAdmin.EmployeeNo.Length < 3)
                {
                    ModelState.AddModelError("NewApplicationAdmin.EmployeeNo", "‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 3 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£");
                }
            }

            // üî• ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á: ‡∏ó‡∏≥‡πÉ‡∏´‡πâ FullName ‡πÄ‡∏õ‡πá‡∏ô optional ‡πÅ‡∏•‡∏∞ trim
            if (!string.IsNullOrWhiteSpace(NewApplicationAdmin.FullName))
            {
                NewApplicationAdmin.FullName = NewApplicationAdmin.FullName.Trim();
            }

            if (!ModelState.IsValid)
            {
                foreach (var state in ModelState)
                    foreach (var error in state.Value.Errors)
                        _logger.LogWarning("[VALIDATION ERROR] {Key}: {ErrorMessage}", state.Key, error.ErrorMessage);

                ViewData["ShowAddModal"] = true;
                return Page();
            }

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Application ID ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            var app = _context.Applications.FirstOrDefault(a => a.ApplicationId == NewApplicationAdmin.ApplicationId);
            if (app == null)
            {
                ModelState.AddModelError("NewApplicationAdmin.ApplicationId", "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö");
                ViewData["ShowAddModal"] = true;
                return Page();
            }

            if (app.ApplicationStatus != "‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
            {
                ModelState.AddModelError("NewApplicationAdmin.ApplicationId", "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô");
                ViewData["ShowAddModal"] = true;
                return Page();
            }

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            var existingAdmin = _context.ApplicationAdmins.Any(a => 
                a.ApplicationId == NewApplicationAdmin.ApplicationId && 
                a.EmployeeNo.ToLower() == NewApplicationAdmin.EmployeeNo.ToLower());
            if (existingAdmin)
            {
                ModelState.AddModelError("NewApplicationAdmin.EmployeeNo", "‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡πÅ‡∏≠‡∏õ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß");
                ViewData["ShowAddModal"] = true;
                return Page();
            }

            // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
            NewApplicationAdmin.ApplicationAdminId = Guid.NewGuid();
            NewApplicationAdmin.CreateDate = DateTime.Now;
            NewApplicationAdmin.CreateBy = employeeNo ?? "admin";
            NewApplicationAdmin.UpdateDate = DateTime.Now;
            NewApplicationAdmin.UpdateBy = employeeNo ?? "admin";

            _context.ApplicationAdmins.Add(NewApplicationAdmin);
            await _context.SaveChangesAsync();

            _logger.LogInformation("ApplicationAdmin created successfully!");
            
            // üî• ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÄ‡∏û‡∏¥‡πà‡∏° success message
            TempData["LoginMessage"] = $"‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö {NewApplicationAdmin.EmployeeNo} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à";
            
            return RedirectToPage("/SystemAdmins"); // üî• ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
        }

        public async Task<IActionResult> OnPostEditAsync()
        {
            ApplicationAdmins = _context.ApplicationAdmins.ToList();
            
            var allApplications = _context.Applications
                .OrderBy(a => a.ApplicationStatus == "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
                .ThenBy(a => a.ApplicationName)
                .ToList();
                
            ViewData["ApplicationList"] = allApplications;
            ViewData["ActiveApplicationList"] = allApplications
                .Where(a => a.ApplicationStatus == "‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
                .ToList();

            if (EditApplicationAdmin == null || EditApplicationAdmin.ApplicationAdminId == Guid.Empty)
            {
                ViewData["ShowEditModal"] = true;
                return Page();
            }

            // üî• ‡πÄ‡∏û‡∏¥‡πà‡∏°: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            if (!string.IsNullOrWhiteSpace(EditApplicationAdmin.EmployeeNo))
            {
                EditApplicationAdmin.EmployeeNo = EditApplicationAdmin.EmployeeNo.Trim();
            }
            if (!string.IsNullOrWhiteSpace(EditApplicationAdmin.FullName))
            {
                EditApplicationAdmin.FullName = EditApplicationAdmin.FullName.Trim();
            }

            if (!ModelState.IsValid)
            {
                ViewData["ShowEditModal"] = true;
                return Page();
            }

            var admin = await _context.ApplicationAdmins.FindAsync(EditApplicationAdmin.ApplicationAdminId);
            if (admin == null) return NotFound();

            // üî• ‡πÄ‡∏û‡∏¥‡πà‡∏°: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ã‡πâ‡∏≥‡∏Ç‡∏≠‡∏á‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô (‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á)
            var duplicateEmployee = _context.ApplicationAdmins.Any(a => 
                a.ApplicationId == admin.ApplicationId && 
                a.EmployeeNo.ToLower() == EditApplicationAdmin.EmployeeNo.ToLower() &&
                a.ApplicationAdminId != EditApplicationAdmin.ApplicationAdminId);
                
            if (duplicateEmployee)
            {
                ModelState.AddModelError("EditApplicationAdmin.EmployeeNo", "‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß");
                ViewData["ShowEditModal"] = true;
                return Page();
            }

            admin.EmployeeNo = EditApplicationAdmin.EmployeeNo;
            admin.FullName = EditApplicationAdmin.FullName;
            admin.UpdateDate = DateTime.Now;
            admin.UpdateBy = TempData["EmployeeNo"]?.ToString() ?? "admin";

            await _context.SaveChangesAsync();
            
            TempData["LoginMessage"] = $"‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö {admin.EmployeeNo} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à";
            
            return RedirectToPage("/SystemAdmins"); // üî• ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
        }

        public async Task<IActionResult> OnPostDeleteAsync()
        {
            if (DeleteId == Guid.Empty)
                return BadRequest();

            var admin = await _context.ApplicationAdmins.FindAsync(DeleteId);
            if (admin != null)
            {
                var employeeNo = admin.EmployeeNo;
                _context.ApplicationAdmins.Remove(admin);
                await _context.SaveChangesAsync();
                
                TempData["LoginMessage"] = $"‡∏•‡∏ö‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö {employeeNo} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à";
            }
            
            return RedirectToPage("/SystemAdmins"); // üî• ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡∏£‡∏∞‡∏ö‡∏∏‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
        }

        // ‡πÄ‡∏û‡∏¥‡πà‡∏° method ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï NewApplicationAdmin
        private void ResetNewApplicationAdmin()
        {
            NewApplicationAdmin = new ApplicationAdmin
            {
                ApplicationAdminId = Guid.Empty,
                ApplicationId = Guid.Empty,
                EmployeeNo = string.Empty,
                FullName = string.Empty
            };
        }
    }
}